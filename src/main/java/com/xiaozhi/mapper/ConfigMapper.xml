<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozhi.dao.ConfigMapper">

    <resultMap id="BaseResultMap" type="com.xiaozhi.entity.SysConfig">
        <id property="configId" column="configId" />
        <result property="userId" column="userId" />
        <result property="configName" column="configName" />
        <result property="configDesc" column="configDesc" />
        <result property="configType" column="configType" />
        <result property="modelType" column="modelType" />
        <result property="provider" column="provider" />
        <result property="appId" column="appId" />
        <result property="apiKey" column="apiKey" />
        <result property="apiSecret" column="apiSecret" />
        <result property="ak" column="ak" />
        <result property="sk" column="sk" />
        <result property="apiUrl" column="apiUrl" />
        <result property="isDefault" column="isDefault" />
        <result property="state" column="state" />
        <result property="createTime" column="createTime" />
    </resultMap>

    <sql id="Base_Column_List">
        configId, userId, configName, configDesc, configType, modelType, provider,
        appId, apiKey, apiSecret, ak, sk, apiUrl, isDefault, state, createTime
    </sql>

    <insert id="add" parameterType="com.xiaozhi.entity.SysConfig">
        INSERT INTO sys_config (userId, configType, modelType, provider, configName, configDesc, appId, apiKey, apiSecret, ak, sk, apiUrl, isDefault)
        VALUES (#{userId}, #{configType}, #{modelType}, #{provider}, #{configName}, #{configDesc}, #{appId}, #{apiKey}, #{apiSecret}, #{ak}, #{sk}, #{apiUrl}, #{isDefault})
    </insert>

    <update id="update" parameterType="com.xiaozhi.entity.SysConfig">
        UPDATE
            sys_config
        <set>
            <if test="configType != null and configType != ''">configType = #{configType},</if>
            <if test="modelType != null and modelType != ''">modelType = #{modelType},</if>
            <if test="provider != null and provider != ''">provider = #{provider},</if>
            <if test="configName != null and configName != ''">configName = #{configName},</if>
            <if test="configDesc != null and configDesc != ''">configDesc = #{configDesc},</if>
            <if test="appId != null and appId != ''">appId = #{appId},</if>
            <if test="apiKey != null and apiKey != ''">apiKey = #{apiKey},</if>
            <if test="apiSecret != null and apiSecret != ''">apiSecret = #{apiSecret},</if>
            <if test="ak != null and ak != ''">ak = #{ak},</if>
            <if test="sk != null and sk != ''">sk = #{sk},</if>
            <if test="apiUrl != null and apiUrl != ''">apiUrl = #{apiUrl},</if>
            <if test="isDefault != null and isDefault != ''">isDefault = #{isDefault},</if>
            <if test="state != null and state != ''">state = #{state},</if>
        </set>
        WHERE
            configId = #{configId}
    </update>

    <update id="resetDefault" parameterType="com.xiaozhi.entity.SysConfig">
        UPDATE
            sys_config
        <set>
            isDefault = '0'
        </set>
        WHERE
            configType = #{configType}
            <if test="modelType != null and modelType != ''">AND modelType = #{modelType}</if>
            AND userId = #{userId}
    </update>

    <select id="query" parameterType="com.xiaozhi.entity.SysConfig" resultMap="BaseResultMap">
        SELECT
        DISTINCT
        <include refid="Base_Column_List"></include>
        FROM
            sys_config
        WHERE
            state = '1'
            <if test="userId != null and userId != ''">AND userId = #{userId}</if>
            <if test="isDefault != null and isDefault != ''">AND isDefault = #{isDefault}</if>
            <if test="configType != null and configType != ''">AND configType = #{configType}</if>
            <if test="modelType != null and modelType != ''">AND modelType = #{modelType}</if>
            <choose>
                <when test="provider != null and provider != ''">
                    AND provider = #{provider}
                </when>
                <otherwise>
                    AND provider != 'coze'
                    AND provider != 'dify'
                </otherwise>
            </choose>
            <if test="configName != null and configName != ''">AND configName LIKE CONCAT('%', #{configName}, '%')</if>
    </select>

    <select id="selectConfigById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM
            sys_config
        WHERE
            configId = #{configId}
    </select>
</mapper>
