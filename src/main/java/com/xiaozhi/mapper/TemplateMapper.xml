<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozhi.dao.TemplateMapper">
    
    <resultMap id="BaseResultMap" type="com.xiaozhi.entity.SysTemplate">
        <id property="templateId" column="templateId" />
        <result property="userId" column="userId" />
        <result property="templateName" column="templateName" />
        <result property="templateDesc" column="templateDesc" />
        <result property="templateContent" column="templateContent" />
        <result property="category" column="category" />
        <result property="isDefault" column="isDefault" />
        <result property="state" column="state" />
        <result property="createTime" column="createTime" />
        <result property="updateTime" column="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        userId, templateId, templateName, templateDesc, templateContent, category, isDefault, state, createTime, updateTime
    </sql>
    
    <select id="query" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
            sys_template
        WHERE
            state = 1
            AND userId = #{userId}
            <if test="templateName != null and templateName != ''">
                AND template_name like concat('%', #{templateName}, '%')
            </if>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
        ORDER BY isDefault, createTime DESC
    </select>
    
    <select id="selectTemplateById" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
            sys_template
        WHERE templateId = #{templateId}
    </select>
    
    <insert id="add" parameterType="com.xiaozhi.entity.SysTemplate" useGeneratedKeys="true" keyProperty="templateId">
        insert into sys_template (
            userId,
            templateName,
            templateDesc,
            templateContent,
            category,
            isDefault,
            state,
            createTime,
            updateTime
        ) values (
            #{userId},
            #{templateName},
            #{templateDesc},
            #{templateContent},
            #{category},
            #{isDefault},
            #{state},
            now(),
            now()
        )
    </insert>

    <update id="update" parameterType="com.xiaozhi.entity.SysTemplate">
        UPDATE sys_template
        <set>
            <if test="templateName != null">templateName = #{templateName},</if>
            <if test="templateDesc != null">templateDesc = #{templateDesc},</if>
            <if test="templateContent != null">templateContent = #{templateContent},</if>
            <if test="category != null">category = #{category},</if>
            <if test="isDefault != null">isDefault = #{isDefault},</if>
            <if test="state != null">state = #{state},</if>
        </set>
        WHERE templateId = #{templateId} and userId = #{userId}
    </update>
    
    <update id="resetDefault" parameterType="com.xiaozhi.entity.SysTemplate">
        UPDATE sys_template SET isDefault = '0' WHERE isDefault = 1 AND userId = #{userId}
    </update>

    
</mapper>
